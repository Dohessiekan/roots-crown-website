{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/availability/[staffId]",
      "regex": "^/api/availability/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPstaffId": "nxtPstaffId"
      },
      "namedRegex": "^/api/availability/(?<nxtPstaffId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/bookings/[id]",
      "regex": "^/api/bookings/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/bookings/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/categories/[slug]",
      "regex": "^/api/categories/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/categories/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/services/[slug]",
      "regex": "^/api/services/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/services/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/staff/[id]",
      "regex": "^/api/staff/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/staff/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/staff/[id]/feedback",
      "regex": "^/api/staff/([^/]+?)/feedback(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/staff/(?<nxtPid>[^/]+?)/feedback(?:/)?$"
    },
    {
      "page": "/book/[id]/confirm",
      "regex": "^/book/([^/]+?)/confirm(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/book/(?<nxtPid>[^/]+?)/confirm(?:/)?$"
    },
    {
      "page": "/services/service/[serviceId]",
      "regex": "^/services/service/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPserviceId": "nxtPserviceId"
      },
      "namedRegex": "^/services/service/(?<nxtPserviceId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/services/[category]",
      "regex": "^/services/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcategory": "nxtPcategory"
      },
      "namedRegex": "^/services/(?<nxtPcategory>[^/]+?)(?:/)?$"
    },
    {
      "page": "/staff/[id]",
      "regex": "^/staff/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/staff/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/feedback",
      "regex": "^/feedback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/feedback(?:/)?$"
    },
    {
      "page": "/image-uploader",
      "regex": "^/image\\-uploader(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/image\\-uploader(?:/)?$"
    },
    {
      "page": "/services",
      "regex": "^/services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services(?:/)?$"
    },
    {
      "page": "/staff",
      "regex": "^/staff(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/staff(?:/)?$"
    }
  ],
  "dataRoutes": [
    {
      "page": "/services",
      "dataRouteRegex": "^/_next/data/40o_PWZitbHRdOA4m6Wpq/services\\.json$"
    },
    {
      "page": "/services/service/[serviceId]",
      "routeKeys": {
        "nxtPserviceId": "nxtPserviceId"
      },
      "dataRouteRegex": "^/_next/data/40o_PWZitbHRdOA4m6Wpq/services/service/([^/]+?)\\.json$",
      "namedDataRouteRegex": "^/_next/data/40o_PWZitbHRdOA4m6Wpq/services/service/(?<nxtPserviceId>[^/]+?)\\.json$"
    },
    {
      "page": "/services/[category]",
      "routeKeys": {
        "nxtPcategory": "nxtPcategory"
      },
      "dataRouteRegex": "^/_next/data/40o_PWZitbHRdOA4m6Wpq/services/([^/]+?)\\.json$",
      "namedDataRouteRegex": "^/_next/data/40o_PWZitbHRdOA4m6Wpq/services/(?<nxtPcategory>[^/]+?)\\.json$"
    },
    {
      "page": "/staff/[id]",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "dataRouteRegex": "^/_next/data/40o_PWZitbHRdOA4m6Wpq/staff/([^/]+?)\\.json$",
      "namedDataRouteRegex": "^/_next/data/40o_PWZitbHRdOA4m6Wpq/staff/(?<nxtPid>[^/]+?)\\.json$"
    }
  ],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}