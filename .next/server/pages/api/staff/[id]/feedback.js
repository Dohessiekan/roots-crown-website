"use strict";(()=>{var a={};a.id=987,a.ids=[987],a.modules={5465:(a,b,c)=>{c.r(b),c.d(b,{config:()=>n,default:()=>m,handler:()=>p});var d={};c.r(d),c.d(d,{default:()=>j});var e=c(9046),f=c(8667),g=c(3480),h=c(6435);let i=new(c(6330)).PrismaClient;async function j(a,b){if("GET"!==a.method)return b.status(405).json({message:"Method not allowed"});let{id:c}=a.query;if(!c||"string"!=typeof c)return b.status(400).json({message:"Staff ID is required"});try{console.log("Fetching feedback for staff ID:",c);let a=await i.feedback.findMany({include:{booking:{include:{staff:!0,service:!0}}}});console.log("All feedback entries:",a.length);let d=a.filter(a=>a.booking&&a.booking.staffId===c);console.log("Filtered feedbacks for staff",c,":",d.length),console.log("Staff feedbacks:",JSON.stringify(d,null,2));let e=d.map(a=>({id:a.id,customerName:a.customerName,rating:a.staffRating,comment:a.comment,serviceName:a.booking?.service?.name||"Unknown Service",date:a.createdAt,wouldRecommend:a.wouldRecommend})),f=d.reduce((a,b)=>a+b.staffRating,0),g=d.length>0?f/d.length:0,h=d.length;return b.status(200).json({feedbacks:e,averageRating:Math.round(10*g)/10,reviewCount:h})}catch(a){return console.error("Error fetching staff feedback:",a),b.status(500).json({message:"Internal server error"})}finally{await i.$disconnect()}}var k=c(8112),l=c(8766);let m=(0,h.M)(d,"default"),n=(0,h.M)(d,"config"),o=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/staff/[id]/feedback",pathname:"/api/staff/[id]/feedback",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function p(a,b,c){let d=await o.prepare(a,b,{srcPage:"/api/staff/[id]/feedback"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,k.getTracer)(),e=d.getActiveScopeSpan(),i=o.instrumentationOnRequestError.bind(o),j=async e=>o.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:o.isDev,page:"/api/staff/[id]/feedback",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==l.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await j(e):await d.withPropagatedContext(a.headers,()=>d.trace(l.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:k.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},j))}catch(a){if(o.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6330:a=>{a.exports=require("@prisma/client")}};var b=require("../../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=5465));module.exports=c})();