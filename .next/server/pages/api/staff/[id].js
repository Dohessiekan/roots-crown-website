"use strict";(()=>{var a={};a.id=3,a.ids=[3],a.modules={173:(a,b,c)=>{c.d(b,{z:()=>e});var d=c(6330);let e=globalThis.prisma??new d.PrismaClient},4152:(a,b,c)=>{c.r(b),c.d(b,{config:()=>q,default:()=>p,handler:()=>s});var d={};c.r(d),c.d(d,{default:()=>j});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(173);async function j(a,b){let{id:c}=a.query;if("string"!=typeof c)return b.status(400).json({message:"Invalid staff ID"});switch(a.method){case"GET":return await k(a,b,c);case"PUT":return await l(a,b,c);case"DELETE":return await m(a,b,c);default:return b.status(405).json({message:"Method not allowed"})}}async function k(a,b,c){try{let a=await i.z.staff.findUnique({where:{id:c},include:{staffServices:{include:{service:{include:{category:!0}}}},availability:!0,bookings:{include:{service:!0},orderBy:{appointmentDate:"desc"}}}});if(!a)return b.status(404).json({message:"Staff member not found"});let d={...a,specialties:JSON.parse(a.specialties||"[]")};return b.status(200).json(d)}catch(a){return console.error("Error fetching staff member:",a),b.status(500).json({message:"Internal server error"})}}async function l(a,b,c){try{let{name:d,title:e,bio:f,email:g,phone:h,image:j,specialties:k,isActive:l,serviceIds:m=[]}=a.body;await i.z.staff.update({where:{id:c},data:{name:d,title:e,bio:f,email:g,phone:h,image:j,specialties:JSON.stringify(k||[]),isActive:l}}),m.length>=0&&(await i.z.staffService.deleteMany({where:{staffId:c}}),m.length>0&&await i.z.staffService.createMany({data:m.map(a=>({staffId:c,serviceId:a}))}));let n=await i.z.staff.findUnique({where:{id:c},include:{staffServices:{include:{service:!0}},availability:!0}});return b.status(200).json({...n,specialties:JSON.parse(n?.specialties||"[]")})}catch(a){return console.error("Error updating staff member:",a),b.status(500).json({message:"Internal server error"})}}async function m(a,b,c){try{return await i.z.staff.delete({where:{id:c}}),b.status(200).json({message:"Staff member deleted successfully"})}catch(a){return console.error("Error deleting staff member:",a),b.status(500).json({message:"Internal server error"})}}var n=c(8112),o=c(8766);let p=(0,h.M)(d,"default"),q=(0,h.M)(d,"config"),r=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/staff/[id]",pathname:"/api/staff/[id]",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function s(a,b,c){let d=await r.prepare(a,b,{srcPage:"/api/staff/[id]"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,n.getTracer)(),e=d.getActiveScopeSpan(),i=r.instrumentationOnRequestError.bind(r),j=async e=>r.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:r.isDev,page:"/api/staff/[id]",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==o.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await j(e):await d.withPropagatedContext(a.headers,()=>d.trace(o.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:n.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},j))}catch(a){if(r.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6330:a=>{a.exports=require("@prisma/client")}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=4152));module.exports=c})();